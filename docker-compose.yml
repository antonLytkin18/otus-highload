version: '3'

services:
  db:
    build: ./db
    restart: always
    environment:
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DB}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - 10100:3306
    volumes:
      - ./db/volume:/var/lib/mysql

  app:
    build: ./app
    env_file:
      - .env
    volumes:
      - ./app:/app
    ports:
      - 5000:5000
    depends_on:
      - rabbitmq
      - db

  chat-db:
    build: ./chat-db
    restart: always
    environment:
      MYSQL_USER: ${CHAT_APP_MYSQL_USER}
      MYSQL_PASSWORD: ${CHAT_APP_MYSQL_PASSWORD}
      MYSQL_DATABASE: ${CHAT_APP_MYSQL_DB}
      MYSQL_ROOT_PASSWORD: ${CHAT_APP_MYSQL_ROOT_PASSWORD}
    ports:
      - 10200:3306
    volumes:
      - ./chat-db/volume:/var/lib/mysql

  chat-app:
    build: ./chat-app
    environment:
      FLASK_APP: ${CHAT_APP_FLASK_APP}
    env_file:
      - .env
    volumes:
      - ./chat-app:/chat-app
    ports:
      - 9000:5000
    depends_on:
      - app
      - chat-db

  chat-app-2:
    build: ./chat-app
    environment:
      FLASK_APP: ${CHAT_APP_FLASK_APP}
      CHAT_APP_URL: ${CHAT_APP_URL_2}
      CHAT_APP_HOST: ${CHAT_APP_HOST_2}
    env_file:
      - .env
    volumes:
      - ./chat-app:/chat-app
    ports:
      - 9200:5000
    depends_on:
      - app
      - chat-db

  counter-app:
    build: ./counter-app
    env_file:
      - .env
    volumes:
      - ./counter-app:/counter-app
    ports:
      - 9100:5000
    depends_on:
      - chat-app

  chat-app-worker:
    build: ./chat-app
    environment:
      FLASK_APP: ${CHAT_APP_FLASK_APP}
    env_file:
      - .env
    command: flask
    volumes:
      - ./chat-app:/chat-app
    depends_on:
      - chat-app

  socketio:
    build: ./socketio
    env_file:
      - .env
    volumes:
      - ./socketio:/socketio
    ports:
      - 8000:8000
    depends_on:
      - app
      - db

  celery:
    build: ./app
    command: celery worker -A task.worker.celery --loglevel=info
    env_file:
      - .env
    volumes:
      - ./app:/app
    depends_on:
      - app
      - db

  tarantool:
    image: tarantool/tarantool:1.10.6
    volumes:
      - ./tarantool/volume:/var/lib/tarantool
      - ./tarantool/conf/init.lua:/opt/tarantool/init.lua
    ports:
      - 3301:3301

  tarantool-replicator:
    build: ./tarantool-replicator
    privileged: true
    depends_on:
      - db
      - tarantool

  clickhouse:
    image: yandex/clickhouse-server:20.1.15.109
    ports:
      - 8123:8123
      - 9000:9000
    volumes:
      - ./clickhouse/initdb:/docker-entrypoint-initdb.d
      - ./clickhouse/volume:/var/lib/clickhouse
      - ./clickhouse/dump:/dump

  redis:
    image: redis:6
    ports:
      - 6379:6379
    volumes:
      - ./redis/volume:/data

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
    ports:
      - 15672:15672
      - 5672:5672
    volumes:
      - ./rabbitmq/volume:/var/lib/rabbitmq

  consul:
    image: consul
    ports:
      - 8500:8500
